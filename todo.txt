file
    new note
    new category
    --
    exit
edit
    cut
    copy
    paste
options:
    project könyvár
    git repo
    lastopened könyvtár
help
    context
    about

a legutolsó fájlt meg kell jegyezni
*a fáj bármikor átnevezhető nevének átírásával


https://doc.qt.io/qt-5/qtwidgets-richtext-syntaxhighlighter-example.html
https://www.qtcentre.org/threads/53567-QPlainTextEdit-highlight-word

https://help.github.com/en/github/importing-your-projects-to-github/adding-an-existing-project-to-github-using-the-command-line
https://github.com/note55/note1.git
horvath.zoltan.mobil3@gmail.com
asERxc5678asERxc56

zoli@shiva:~/common$ git fetch origin
zoli@shiva:~/common$ git log HEAD..origin/master --oneline

bb346e7 (origin/master, origin/HEAD) Update tst_test2.cpp
zoli@shiva:~/common$ git log HEAD..origin/master
commit bb346e7d842f36695774a341f8d1678d7f887733 (origin/master, origin/HEAD)
Author: Horváth Zoltán <horvath.zoltan.mobil@gmail.com>
Date:   Tue Feb 25 20:36:39 2020 +0100

    Update tst_test2.cpp
zoli@shiva:~/common$


https://stackoverflow.com/questions/1230084/how-to-have-git-log-show-filenames-like-svn-log-v/1230094
git fetch origin
git log --name-status <branch>..<branch> | grep -E '^[A-Z]\b' | sort | uniq

zoli@shiva:~/common$ git fetch origin
remote: Enumerating objects: 9, done.
remote: Counting objects: 100% (9/9), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 5 (delta 3), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (5/5), done.
From https://github.com/horvathzoltan/common
   482d426..85b8224  master     -> origin/master
zoli@shiva:~/common$ git log --name-status HEAD..origin/master | grep -E '^[A-Z]\b' | sort | uniq
M       common/shortguid/shortguid.cpp
M       common/shortguid/shortguid.h
M       test2/tst_test2.cpp
zoli@shiva:~/common$

beállításokban megadni egy usernevet
ha egy jegyzet válzozik, az utolsó sorba bele kell tenni ###user;UTCtimestamp
ha egy jegyzet változik, amikor újat nyit meg, előtte save, commit és push
ha átnevezi, törli magy újat hoz létre, és van repo, követni kell
 - git mv, rm, add

beállításokban megadja a könyvtárat,
ha a könyvtárban már van egy repo, akkor ki kell írni
megadja a git repot
ok->
- ha ok és valid ->
- ha a könyvtár üres-> clone: git clone git@github.com:whatever .
- ha nem üres->
    - nincs repo:init, addlocal, commit
    - van repo:
        - nincs remote: add remote
        - van remote:
            - ha egyezik, akkor fasza
            - ha nem egyezik -> kicserélni a remotet
    - fetch, checkout, push
-mentjük, frissítjük a fát

git init
git remote add origin PATH/TO/REPO
git fetch
git checkout -t origin/master
*************vagy***************
git init
git add .
git commit -m "First commit"
git remote add origin PATH/TO/REPO
//git remote -v
git push origin master

minden fájlról lokálisan tudni kell, mikor olvastuk utoljára - ez elvileg a fájlrendszerből megvan
ha egy fájt valaki módosított, akkor az fetch és git log --name-status után látszik -
    - ezeket le kell szedni mert módosultak
    - ezeket jelezni kell, hogy módosultak - egészen addig amíg meg nem nyitjuk
    - elvileg lehet tudni, hogy mik módosultak a fájlon az utolsó olvasás óta

****************-

add (to repo) ->
validáció:
 - az aktuális model index:
    - ha könyvtár (külön nem kell hozzáadni)
        - ha nem nem olyan könyvtárban van, ami repoban van ( git rev-parse --show-toplevel)
        akkor új repot lehet létrehozni (helyi és távoli)
            - url, passwd, user  dialog
            - url, passwd, user  - megjegyez
        - ha van toplevel, akkor return;
    - fájl
        - ha repoban van és még nincs hozzáadva:
            hozzáad
       - egyébként return;
művelet: hozzá kell adni a fájlt a repohoz, commit, amjd push

addrepovalidation->
    - ha az aktuális index a fentieknek eleget tesz, ok, ha nem false

clone repo ->
meg kell adni egy repot,
- url, passwd, user  dialog
- ha ilyen néven nincsen még könyvtár
    amit leklónoz a proj könyvtárban
- url, passwd, user   megjegyez

git@github.com:horvathzoltan/common.git - common könyvtár van-e
git -C /home/zoli/cmn2/a clone git@github.com:horvathzoltan/3dplots.git




